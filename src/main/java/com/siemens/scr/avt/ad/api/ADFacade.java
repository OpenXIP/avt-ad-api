package com.siemens.scr.avt.ad.api;

import java.util.List;
import java.util.Map;
import java.util.Set;

import org.dcm4che2.data.DicomObject;

import com.siemens.scr.avt.ad.annotation.ImageAnnotation;
import com.siemens.scr.avt.ad.annotation.ImageAnnotationDescriptor;
import com.siemens.scr.avt.ad.dicom.GeneralImage;
import com.siemens.scr.avt.ad.dicom.GeneralSeries;
import com.siemens.scr.avt.ad.dicom.GeneralStudy;
import com.siemens.scr.avt.ad.dicom.Patient;

/**
 * This class is a facade accumulating methods considered useful for end users.
 * 
 * @author Xiang Li
 *
 */
public interface ADFacade {
	
	/**
	 * Returns a single AIM Annotation Object specified by it's unique identifier.
	 * @param annotationUID An AIM Annotation Unique Identifier
	 * @return An ImageAnnotation Object
	 */
	public ImageAnnotation getAnnotation(String annotationUID);
	
	/**
	 * Store a new AIM Annotation
	 * 
	 * @param annotation A new AIM Annotation
	 * @param user A User Object representing the human user storing the annotation
	 * @param pedigree Pedigree information on the AVT object, algorithm name and version in case of annotions generated by AE
	 * @param comment A user comment
	 */
	public boolean saveAnnotation(ImageAnnotation annotation, User user, String pedigree, String comment);
	
	/**
	 * Store a list of new AIM Annotations
	 * 
	 * @param annotations A list of new AIM Annotations
	 * @param user A User Object representing the human user storing the annotations
	 * @param pedigree Pedigree information on the AVT object, algorithm name and version in case of annotations generated by AE
	 * @param comment A user comment
	 */
	public boolean saveAnnotations(List<ImageAnnotation> annotations, User user, String pedigree, String comment); 
	
	/**
	 * Store a new DICOM Image
	 * 
	 * @param image A new DICOM Image
	 */
	public void saveDicom(DicomObject image);
	
	/**
	 * Store a list of DICOM Images
	 * 
	 * @param images A list of DICOM Images
	 */
	public void saveDicoms(List<DicomObject> images);
	
	/**
	 * Store a new version of an existing AIM Annotation. The original annotation remains unchanged to enable Audit Trailing.
	 * 
	 * @param annotation A new version of an existing ImageAnnotation
	 * @param user A User Object representing the human user updating the annotation
	 * @param comment A user comment, e.g. reason for "updating" the original image annotation
	 * @param pedigree Pedigree information on the AVT object, algorithm name and version in case of annotions generated by AE
	 * @param referenceUID The unique identifier of the ImageAnnotation this new version has been derived from
	 * @return A boolean value indicating if the new version has been stored successfully
	 */
	public boolean updateAnnotation(ImageAnnotation annotation, User user, String pedigree, String comment, String referenceUID);
	
	/**
	 * Returns a single DICOM object specified by SOP Instance UID. Includes pixel data.
	 * @param SOPInstanceUID A SOP Instance Unique Identifier
	 * @return A DICOM Object
	 */
	public DicomObject getDicomObject(String SOPInstanceUID);
	
	/**
	 * Returns a single DICOM object specified by SOP Instance UID. Omits pixel data to save memory.
	 * @param SOPInstanceUID A SOP Instance Unique Identifier
	 * @return A DICOM Object
	 */
	public DicomObject getDicomObjectWithoutPixel(String SOPInstanceUID);
	
	/**
	 * Retrieve Unique Identifiers for Annotation Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A list of AIM Unique Identifiers
	 */
	public List<String> findAnnotations(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);  
	
	/**
	 * Retrieve all SOP Instance UIDs for DICOM Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A list of SOP Instance UIDs
	 */
	public List<String> findDicomObjs(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all AIM Objects matching the DICOM/AIM criteria specified, including pixel data. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A list of AIM Objects
	 */
	public List<ImageAnnotation> retrieveAnnotations(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all DICOM Objects matching the DICOM/AIM criteria specified, including pixel data. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A list of DICOM Objects
	 */
	public List<DicomObject> retrieveDicomObjs(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all DICOM Objects matching the DICOM/AIM criteria specified. Omit pixel data to save memory. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A list of DICOM Objects
	 */
	public List<DicomObject> retrieveDicomObjsWithoutPixel(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all Patient Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A set of Patient Objects
	 */
	public List<Patient> findPatientByCriteria(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all Study Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A set of Study Objects
	 */
	public List<GeneralStudy> findStudiesByCriteria(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all Series Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A set of Series Objects
	 */
	public List<GeneralSeries> findSeriesByCriteria(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all Image Objects matching the DICOM/AIM criteria specified. Query traverses related DICOM/AIM Objects as necessary.
	 * 
	 * @param dicomCriteria A HashMap. Keys are DICOM Tags in integer format. Values are suitable Java Objects, e.g. Strings. 
	 * @param annotationCriteria A HashMap. Keys are Strings in format &lt;AIM XML Element&gt;.&lt;AIM XML Attribute&gt;. Values are suitable Java Objects, e.g. Strings. 
	 * @return A set of Image Objects
	 */
	public List<GeneralImage> findImagesByCriteria(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria);
	
	/**
	 * Retrieve all Study Objects for a particular Patient
	 * @param patient
	 * @return A set of Study Objects
	 */
	public Set<GeneralStudy> retrieveStudiesOf(Patient patient);
	
	/**
	 * Retrieve all Series Objects for a particular Study
	 * @param patient A Patient Object
	 * @return A set of Series Objects
	 */
	public Set<GeneralSeries> retrieveSeriesOf(GeneralStudy study);
	
	/**
	 * Retrieve all DICOM Images for a particular Series
	 * @param series A Series Object
	 * @return A set of Image Objects
	 */
	public Set<GeneralImage> retrieveImagesOf(GeneralSeries series);
	
	/**
	 * ImageAnnotation Objects for a particular DICOM Image.
	 * @param image An Image Object
	 * @return A set of ImageAnnotation Objects
	 */
	public Set<ImageAnnotation> retrieveAnnotationsOf(GeneralImage image);
	
	/**
	 * Returns a list of ImageAnnotation Descriptors for all annotations to images in a series. A descriptor contains a subset of frequently used AIM attributes.
	 * @param seriesInstanceUID The unique identifier of a DICOM Series.
	 * @return A list of Image Annotation Descriptors 
	 */
	public List<ImageAnnotationDescriptor> listAnnotationsInSeries(String seriesInstanceUID);
	
	/**
	 * @deprecated
	 * Workaround for a fixed bug.
	 * Use retrieveAnnotations(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria) instead.
	 * @param seriesInstanceUID
	 * @param roleInTrial
	 * @return
	 */	
	public List<ImageAnnotation> retrieveAnnotationsInSeries(String seriesInstanceUID);
	
	/**
	 * @deprecated
	 * Workaround for a fixed bug.
	 * Use retrieveAnnotations(Map<Integer, Object> dicomCriteria, Map<String, Object> annotationCriteria) instead.
	 * @param seriesInstanceUID
	 * @param roleInTrial
	 * @return
	 */
	public List<ImageAnnotation> retrieveAnnotationsInSeries(String seriesInstanceUID, String roleInTrial);
	
	/**
	 * Returns the DICOM Segmentation Objects (mark up) for the aim annotation identified by annotationUID.
	 * @param annotationUID - A unique identifier for an AIM Annotation
	 * @return a list of DicomObject instances
	 */
	public List<DicomObject> retrieveSegmentationObjects(String annotationUID);
}
